/*
 * LListToy.java
 *
 * Created on June 6, 2003, 8:26 PM
 */

package colToy;
import java.lang.IndexOutOfBoundsException;
import java.util.Iterator;

/**
 *
 * @author  Bambang Hariyanto,Ir.MT
 */
public class LListToy implements List{
    private SLLNode first, last;
    private int numberOfElements;
    
    /** Creates a new instance of LListToy */
    public LListToy() {
    }
    
    private void reset(){
        first = null;
        last = null;
        numberOfElements = 0;
    }
    
    public void add(Object o) {
        SLLNode n = new SLLNode(o,null);
        if (first==null) first=n;
        else last.next = n;
        last = n;
        numberOfElements++;
    }
    
    public void add(int i, Object o) {
        if(i<0 || i>numberOfElements) throw new IndexOutOfBoundsException();
        SLLNode n = new SLLNode(o,null);
        if (i==0) {
            n.next = first;
            first = n;
        } else {
            SLLNode pred = node(i-1);
            n.next = pred.next;
            pred.next = n;
        }
        
        if (n.next == null) last = n;
        numberOfElements++;
    }
    
    public void addAll(Listable l) {
        LListToy other = (LListToy) l;
        for(SLLNode cur=other.first; cur!=null; cur=cur.next) add(cur.o);
    }
    
    public void clear() {
        reset();
    }
    
    public boolean equals(Listable l) {
        LListToy other = (LListToy) l;
        if(numberOfElements != other.numberOfElements) return false;
        for(SLLNode cur1=first,cur2=other.first;cur1!=null;cur1=cur1.next,cur2=cur2.next){
            if(!cur1.o.equals(cur2.o)) return false;
        }
        return true;
    }
    
    public Object get(int i) {
        if(i<0 || i>=numberOfElements) throw new IndexOutOfBoundsException();
        SLLNode cur = node(i);
        return cur.o;
    }
    
    public boolean isEmpty() {
        return (numberOfElements==0);
    }
    
    public Iterator iterator() {
        return null;
    }
    
    public void remove(int i) {
        if(i<0 || i>=numberOfElements) throw new IndexOutOfBoundsException();
        if(i==0) {
            if (first==last) last=null;
            first = first.next;
        } else {
            SLLNode pred = node(i-1);
            if(pred.next == last) last = pred;
            pred.next = pred.next.next;
        }
        numberOfElements--;
    }
    
    public void set(int i, Object o) {
        if(i<0 || i>=numberOfElements) throw new IndexOutOfBoundsException();
        SLLNode cur = node(i);
        cur.o = o;
    }
    
    private SLLNode node(int i){
        SLLNode cur = first;
        for(int j=0;j<i;j++) cur = cur.next;
        return cur;
    }
    
}
